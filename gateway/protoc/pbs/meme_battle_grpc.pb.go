// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.29.3
// source: meme_battle.proto

package pbs

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MemeBattleService_ComEntranceFunc_FullMethodName = "/meme_battle.memeBattleService/comEntranceFunc"
)

// MemeBattleServiceClient is the client API for MemeBattleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MemeBattleServiceClient interface {
	// rpc mtTest(mTStatusReq) returns (common.netMessage);
	ComEntranceFunc(ctx context.Context, in *NetMessage, opts ...grpc.CallOption) (*NetMessage, error)
}

type memeBattleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMemeBattleServiceClient(cc grpc.ClientConnInterface) MemeBattleServiceClient {
	return &memeBattleServiceClient{cc}
}

func (c *memeBattleServiceClient) ComEntranceFunc(ctx context.Context, in *NetMessage, opts ...grpc.CallOption) (*NetMessage, error) {
	out := new(NetMessage)
	err := c.cc.Invoke(ctx, MemeBattleService_ComEntranceFunc_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MemeBattleServiceServer is the server API for MemeBattleService service.
// All implementations must embed UnimplementedMemeBattleServiceServer
// for forward compatibility
type MemeBattleServiceServer interface {
	// rpc mtTest(mTStatusReq) returns (common.netMessage);
	ComEntranceFunc(context.Context, *NetMessage) (*NetMessage, error)
	mustEmbedUnimplementedMemeBattleServiceServer()
}

// UnimplementedMemeBattleServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMemeBattleServiceServer struct {
}

func (UnimplementedMemeBattleServiceServer) ComEntranceFunc(context.Context, *NetMessage) (*NetMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComEntranceFunc not implemented")
}
func (UnimplementedMemeBattleServiceServer) mustEmbedUnimplementedMemeBattleServiceServer() {}

// UnsafeMemeBattleServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MemeBattleServiceServer will
// result in compilation errors.
type UnsafeMemeBattleServiceServer interface {
	mustEmbedUnimplementedMemeBattleServiceServer()
}

func RegisterMemeBattleServiceServer(s grpc.ServiceRegistrar, srv MemeBattleServiceServer) {
	s.RegisterService(&MemeBattleService_ServiceDesc, srv)
}

func _MemeBattleService_ComEntranceFunc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemeBattleServiceServer).ComEntranceFunc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MemeBattleService_ComEntranceFunc_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemeBattleServiceServer).ComEntranceFunc(ctx, req.(*NetMessage))
	}
	return interceptor(ctx, in, info, handler)
}

// MemeBattleService_ServiceDesc is the grpc.ServiceDesc for MemeBattleService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MemeBattleService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "meme_battle.memeBattleService",
	HandlerType: (*MemeBattleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "comEntranceFunc",
			Handler:    _MemeBattleService_ComEntranceFunc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meme_battle.proto",
}
