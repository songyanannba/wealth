// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.29.3
// source: com.proto

package pbs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用code
type Code int32

const (
	Code_Unknown Code = 0   //未知
	Code_WebOK   Code = 1   // Success
	Code_OK      Code = 200 // Success
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:   "Unknown",
		1:   "WebOK",
		200: "OK",
	}
	Code_value = map[string]int32{
		"Unknown": 0,
		"WebOK":   1,
		"OK":      200,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_com_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_com_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{0}
}

type ErrCode int32

const (
	ErrCode_ErrCode0        ErrCode = 0
	ErrCode_NotLogin        ErrCode = 1000 //未登录
	ErrCode_TokenExpiration ErrCode = 1001 //token 过期
	ErrCode_ServerError     ErrCode = 1004 // 系统错误
	ErrCode_NotRegister     ErrCode = 1031 //未注册 和http请求保持一致
	ErrCode_NotRoom         ErrCode = 1032 //没有房间
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:    "ErrCode0",
		1000: "NotLogin",
		1001: "TokenExpiration",
		1004: "ServerError",
		1031: "NotRegister",
		1032: "NotRoom",
	}
	ErrCode_value = map[string]int32{
		"ErrCode0":        0,
		"NotLogin":        1000,
		"TokenExpiration": 1001,
		"ServerError":     1004,
		"NotRegister":     1031,
		"NotRoom":         1032,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_com_proto_enumTypes[1].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_com_proto_enumTypes[1]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{1}
}

// 协议号码
type ProtocNum int32

const (
	ProtocNum_RPN      ProtocNum = 0
	ProtocNum_LoginReq ProtocNum = 10000
	ProtocNum_LoginAck ProtocNum = 10001
	ProtocNum_HeartReq ProtocNum = 10002
	ProtocNum_HeartAck ProtocNum = 10003
	// 获取动物派对的信息
	ProtocNum_CurrAPInfoReq ProtocNum = 10004
	ProtocNum_CurrAPInfoAck ProtocNum = 10005
)

// Enum value maps for ProtocNum.
var (
	ProtocNum_name = map[int32]string{
		0:     "RPN",
		10000: "LoginReq",
		10001: "LoginAck",
		10002: "HeartReq",
		10003: "HeartAck",
		10004: "CurrAPInfoReq",
		10005: "CurrAPInfoAck",
	}
	ProtocNum_value = map[string]int32{
		"RPN":           0,
		"LoginReq":      10000,
		"LoginAck":      10001,
		"HeartReq":      10002,
		"HeartAck":      10003,
		"CurrAPInfoReq": 10004,
		"CurrAPInfoAck": 10005,
	}
)

func (x ProtocNum) Enum() *ProtocNum {
	p := new(ProtocNum)
	*p = x
	return p
}

func (x ProtocNum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocNum) Descriptor() protoreflect.EnumDescriptor {
	return file_com_proto_enumTypes[2].Descriptor()
}

func (ProtocNum) Type() protoreflect.EnumType {
	return &file_com_proto_enumTypes[2]
}

func (x ProtocNum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocNum.Descriptor instead.
func (ProtocNum) EnumDescriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{2}
}

// ==== 新版公共协议
// 公共请求头
type ReqHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`           //唯一码
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`       //token信息，登录时可留空
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"` //平台名称
}

func (x *ReqHead) Reset() {
	*x = ReqHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqHead) ProtoMessage() {}

func (x *ReqHead) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqHead.ProtoReflect.Descriptor instead.
func (*ReqHead) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{0}
}

func (x *ReqHead) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ReqHead) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReqHead) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

// 公共响应头
type AckHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                     // 用户id
	Code    Code   `protobuf:"varint,2,opt,name=code,proto3,enum=common.Code" json:"code,omitempty"` // 状态码 只有1为成功 其他均视为失败
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`             // 消息
}

func (x *AckHead) Reset() {
	*x = AckHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckHead) ProtoMessage() {}

func (x *AckHead) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckHead.ProtoReflect.Descriptor instead.
func (*AckHead) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{1}
}

func (x *AckHead) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AckHead) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_Unknown
}

func (x *AckHead) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 通用协议交换方式
type NetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqHead *ReqHead `protobuf:"bytes,1,opt,name=req_head,json=reqHead,proto3" json:"req_head,omitempty"` // 返回统一协议
	AckHead *AckHead `protobuf:"bytes,2,opt,name=ack_head,json=ackHead,proto3" json:"ack_head,omitempty"` // 返回统一协议
	ServiceId string `protobuf:"bytes,3,opt,name=Service_id,json=ServiceId,proto3" json:"Service_id,omitempty"` //服务号
	MsgId     int32  `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`            //协议号
	Content   []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                      //协议内容
}

func (x *NetMessage) Reset() {
	*x = NetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetMessage) ProtoMessage() {}

func (x *NetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetMessage.ProtoReflect.Descriptor instead.
func (*NetMessage) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{2}
}

func (x *NetMessage) GetReqHead() *ReqHead {
	if x != nil {
		return x.ReqHead
	}
	return nil
}

func (x *NetMessage) GetAckHead() *AckHead {
	if x != nil {
		return x.AckHead
	}
	return nil
}

func (x *NetMessage) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *NetMessage) GetMsgId() int32 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *NetMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Test1Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户Id
}

func (x *Test1Req) Reset() {
	*x = Test1Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test1Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test1Req) ProtoMessage() {}

func (x *Test1Req) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test1Req.ProtoReflect.Descriptor instead.
func (*Test1Req) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{3}
}

func (x *Test1Req) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Test1Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户Id
}

func (x *Test1Ack) Reset() {
	*x = Test1Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test1Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test1Ack) ProtoMessage() {}

func (x *Test1Ack) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test1Ack.ProtoReflect.Descriptor instead.
func (*Test1Ack) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{4}
}

func (x *Test1Ack) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Test2Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户Id
}

func (x *Test2Req) Reset() {
	*x = Test2Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Req) ProtoMessage() {}

func (x *Test2Req) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Req.ProtoReflect.Descriptor instead.
func (*Test2Req) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{5}
}

func (x *Test2Req) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Test2Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户Id
}

func (x *Test2Ack) Reset() {
	*x = Test2Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test2Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test2Ack) ProtoMessage() {}

func (x *Test2Ack) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test2Ack.ProtoReflect.Descriptor instead.
func (*Test2Ack) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{6}
}

func (x *Test2Ack) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 登录
type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId int32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` //平台（先默认填1）
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{7}
}

func (x *Login) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type LoginAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string  `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	City     string  `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Amount   float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	UserId   string  `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LoginAck) Reset() {
	*x = LoginAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAck) ProtoMessage() {}

func (x *LoginAck) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAck.ProtoReflect.Descriptor instead.
func (*LoginAck) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{8}
}

func (x *LoginAck) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginAck) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *LoginAck) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *LoginAck) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 心跳
type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{9}
}

type HeartBeatAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeatAck) Reset() {
	*x = HeartBeatAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatAck) ProtoMessage() {}

func (x *HeartBeatAck) ProtoReflect() protoreflect.Message {
	mi := &file_com_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatAck.ProtoReflect.Descriptor instead.
func (*HeartBeatAck) Descriptor() ([]byte, []int) {
	return file_com_proto_rawDescGZIP(), []int{10}
}

var File_com_proto protoreflect.FileDescriptor

var file_com_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x22, 0x58, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x01,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x71, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x52, 0x07, 0x61,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x31, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x08, 0x74,
	0x65, 0x73, 0x74, 0x31, 0x41, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x23, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x32, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x32, 0x41, 0x63,
	0x6b, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x42, 0x65, 0x61, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x41, 0x63, 0x6b, 0x2a, 0x27, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x65,
	0x62, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0xc8, 0x01, 0x2a, 0x6e,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x30, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x10, 0xe8, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe9, 0x07, 0x12, 0x10, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xec, 0x07, 0x12, 0x10,
	0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x87, 0x08,
	0x12, 0x0c, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x88, 0x08, 0x2a, 0x78,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x12, 0x07, 0x0a, 0x03, 0x52,
	0x50, 0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x10, 0x90, 0x4e, 0x12, 0x0d, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x10,
	0x91, 0x4e, 0x12, 0x0d, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x10, 0x92,
	0x4e, 0x12, 0x0d, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x10, 0x93, 0x4e,
	0x12, 0x12, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x41, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x10, 0x94, 0x4e, 0x12, 0x12, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x41, 0x50, 0x49, 0x6e,
	0x66, 0x6f, 0x41, 0x63, 0x6b, 0x10, 0x95, 0x4e, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x70, 0x62, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_proto_rawDescOnce sync.Once
	file_com_proto_rawDescData = file_com_proto_rawDesc
)

func file_com_proto_rawDescGZIP() []byte {
	file_com_proto_rawDescOnce.Do(func() {
		file_com_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_proto_rawDescData)
	})
	return file_com_proto_rawDescData
}

var file_com_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_com_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_com_proto_goTypes = []interface{}{
	(Code)(0),            // 0: common.Code
	(ErrCode)(0),         // 1: common.ErrCode
	(ProtocNum)(0),       // 2: common.ProtocNum
	(*ReqHead)(nil),      // 3: common.req_head
	(*AckHead)(nil),      // 4: common.ack_head
	(*NetMessage)(nil),   // 5: common.netMessage
	(*Test1Req)(nil),     // 6: common.test1Req
	(*Test1Ack)(nil),     // 7: common.test1Ack
	(*Test2Req)(nil),     // 8: common.test2Req
	(*Test2Ack)(nil),     // 9: common.test2Ack
	(*Login)(nil),        // 10: common.login
	(*LoginAck)(nil),     // 11: common.loginAck
	(*HeartBeat)(nil),    // 12: common.heartBeat
	(*HeartBeatAck)(nil), // 13: common.heartBeatAck
}
var file_com_proto_depIdxs = []int32{
	0, // 0: common.ack_head.code:type_name -> common.Code
	3, // 1: common.netMessage.req_head:type_name -> common.req_head
	4, // 2: common.netMessage.ack_head:type_name -> common.ack_head
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_com_proto_init() }
func file_com_proto_init() {
	if File_com_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test1Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test1Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test2Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_proto_goTypes,
		DependencyIndexes: file_com_proto_depIdxs,
		EnumInfos:         file_com_proto_enumTypes,
		MessageInfos:      file_com_proto_msgTypes,
	}.Build()
	File_com_proto = out.File
	file_com_proto_rawDesc = nil
	file_com_proto_goTypes = nil
	file_com_proto_depIdxs = nil
}
